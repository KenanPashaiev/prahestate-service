version: '3.8'

services:
  app:
    build: .
    container_name: prahestate-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-changeme123}@db:5432/prahestate
      - PORT=3000
      - SYNC_ENABLED=true
      - SYNC_SCHEDULE=0 */6 * * *
      - API_REQUEST_DELAY_MS=2000
      - SYNC_BATCH_SIZE=50
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - prahestate
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    container_name: prahestate-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: prahestate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prahestate
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Database admin interface
  adminer:
    image: adminer:latest
    container_name: prahestate-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - prahestate
    depends_on:
      - db

networks:
  prahestate:
    driver: bridge

volumes:
  postgres_data:
    driver: local
