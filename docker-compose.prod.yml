version: '3.8'

services:
  prahestate-app:
    build: .
    container_name: prahestate-service
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@prahestate-db:5432/prahestate
      - PORT=3000
      - SYNC_ENABLED=true
      - SYNC_SCHEDULE=0 */6 * * *
      - API_REQUEST_DELAY_MS=2000
      - SYNC_BATCH_SIZE=50
    depends_on:
      prahestate-db:
        condition: service_healthy
    volumes:
      - app-logs:/app/logs
    networks:
      - prahestate-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prahestate-db:
    image: postgres:15-alpine
    container_name: prahestate-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: prahestate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - prahestate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

  # Optional: Database administration interface
  adminer:
    image: adminer:latest
    container_name: prahestate-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: prahestate-db
    networks:
      - prahestate-network
    depends_on:
      - prahestate-db

  # Optional: Monitoring with Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prahestate-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - prahestate-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

networks:
  prahestate-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  app-logs:
    driver: local
  prometheus-data:
    driver: local
